<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sx = 0;
sy = 0;
cx = room_width/2;
cy = room_height;
cycle = .5;
dir = 0;
plant = -1;
leaf = -1;
dist = -1;
x = 0;
y = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>plant = -1;
leaf = -1;
dist = 9999;

/*
cx = room_width*cycle;
//cy = room_height;

dir = 180*cycle;
sx = cx + lengthdir_x(room_height, dir);
sy = cy + lengthdir_y(room_height, dir);
cycle += .001;
if cycle &gt; .55{cycle = .45;}
*/

if keyboard_check(ord('W')){sy-=10;}
if keyboard_check(ord('A')){sx-=10;}
if keyboard_check(ord('S')){sy+=10;}
if keyboard_check(ord('D')){sx+=10;}

cx = mouse_x;
cy = mouse_y;

var tplant = -1, tleaf = -1, tdist = 99999,;
for(it = 0; it &lt; instance_number(o_plant); it++){
    //get each plant
    tplant = instance_find(o_plant, it);
    if tplant.finished == 1{
        //find nearest leaf
        tleaf = get_nearest_leaf(tplant, sx, sy, cx, cy);
        if tleaf != -1{
            tdist = point_distance(sx, sy, tplant.stem[tleaf, 5], tplant.stem[tleaf, 6]);
            //is it closer than what we have
            if tdist &lt; dist{
                plant = tplant;
                leaf = tleaf;
                dist = tdist;
            }
            
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(c_yellow);
draw_circle(sx, sy, 100, 1);
draw_circle(cx, cy, 20, 1);
draw_text(room_width - 100, 25, string(plant));
draw_text(room_width - 100, 50, string(get_nearest_leaf(o_plant, sx, sy, cx, cy)));
draw_text(room_width - 100, 100, string(line_line(sx, sy, cx, cy, 0, 500, room_width, 500)));
draw_line(sx, sy, cx, cy);
draw_set_color(c_red);
var d = point_direction(sx, sy, cx, cy);
draw_line(sx, sy, sx + lengthdir_x(dist, d), sy + lengthdir_y(dist, d));
draw_set_color(c_white);
//draw_line(room_width/2, room_height/2, room_width/1.5, room_height/2)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
